name: CiI

permissions:
  contents: read

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]
env:
  LOCAL_ACT: false
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Make mvnw executable (if present)
        run: |
          if [ -f "./mvnw" ]; then chmod +x ./mvnw; fi

      - name: Build and run tests
        working-directory: ./backend
        # use ./mvnw if you commit the Maven wrapper, otherwise `mvn`
        run: ./mvnw -B -e clean verify
        # run `mvn -B -e clean verify` if you don't have mvnw

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            target/surefire-reports/**
            target/failsafe-reports/**
            target/*.log

      - name: Upload JaCoCo (coverage) HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-site
          path: ./backend/target/site/jacoco/**

      - name: Publish JaCoCo Coverage Summary
        if: always()
        run: |
          echo "## JaCoCo Coverage Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f ./backend/target/site/jacoco/jacoco.xml ]; then
            coverage_line=$(grep -A 1 "<counter type=\"LINE\"" ./backend/target/site/jacoco/jacoco.xml | \
              grep -Eo 'covered="[0-9]+" missed="[0-9]+"' | \
              awk -F'"' '{c+=$2; m+=$4} END { if (c+m > 0) printf("Lines covered: %d / %d (%.0f%%)\n", c, c+m, 100*c/(c+m)); else print "No coverage data found." }')
            echo "$coverage_line" >> $GITHUB_STEP_SUMMARY
          else
            echo "JaCoCo XML report not found." >> $GITHUB_STEP_SUMMARY
          fi



  # Optional: Build and push Docker image when pushing to main
  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

